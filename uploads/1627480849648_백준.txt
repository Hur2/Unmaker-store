2448 별 찍기 - 11
-그냥 배열을 처음부터 끝까지 출력함.
->출력을 하는데에 시간이 많이 들어서 한번틀림.
그래서 한줄을 문자열로 바꾼후에 출력함.

한줄평, 생출력은 시간이 오래걸린다.

9251번 "LCS"
-나는 1차원의 dp로 문제를 해결함.
-근데 다른 사람들 보니 2차원을 이용한 듯.
=> 오우 정말 천재적인 아이디어이다. 나는 분명 생각 못함.
=> 나는 문제풀 당시에 첫번째 문장을 선택할지, 뒤에껄 선택할지 고민을 했음. 근데 2차원 표를 만들면 2 문장을 동시에 선택하는 것임. ㄷ

7662번 이중 우선순위 큐
-최대힙과 최소힙을 따로 만드는 아이디어까지 생각함.
-근데 이게 앞에서 이미 꺼낸걸 또 꺼내는 케이스가 있기 때문에 방문처리를 해야함.
-근데 방문처리 할생각은 못하고, 무슨 힙을 임의로 지울 생각을 했음ㄷ. 어려운것도 아닌디...

1967번 트리의 지름
-말단 노드를 찾는다. -> 그리고 말단 노드부터 다른 말단 노트까지의 거리를 찾아서 최대값 구하기
-근데 100%에서 틀림->알고보니 노드가 1개인 케이스 처리를 안해줌......ㅋㅠ

2206번 벽부수고 이동하기
- 굉장히 오랫동안 생각했던 문제임.
- 각 움직임들에게 벽을 뚫은적이 있는지 여부를 넣어줘서, 한번만 벽을 통과할 수 있도록 했음.
- 근데 여기까지만 하면 아직 문제가 남음. 
- 벽을 뚫은 움직임에 대해서는 큐의 뒤에, 그냥 움직임은 큐의 앞에 넣음
-> 벽을 뚫는건 나중에 하게됨. 그럼으로서 해결되는 케이스가 존재함 ㅇㅇ.
- 암튼 기분이가 좋음 ㅎ

12865번 평범한 배낭
- 가장 어려웠던 문제임. 대략적인 알고리즘은 봤음. 배낭 알고리즘이라는게 따로 존재하는 듯.
- 맨처음에는 걍 조합으로 다 더하는 브루트포스 방식을 했으나 당연히 시간초과.
- 다이나믹 프로그래밍이라는데, 뭘 변수로 둬야할지 감도 안잡힘.
=> 변수를 가방의 최대 무게로 줌. 근데 이걸 2차원 배열속에서 실행시킴....와....이걸 어케 생각하냐.
- 약간 전에 풀은 9251번 "LCS"의 정공 해설이 생각나는 문제였음.
- 대다네대다네....



